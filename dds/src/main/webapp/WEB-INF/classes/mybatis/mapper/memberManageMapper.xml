<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fly.dds.admin.mapper.MemberManageMapper">

	<select id="listMember" parameterType="map" resultType="com.fly.dds.admin.domain.MemberManage" >
	 SELECT m.user_num, userid, nickname, reg_date, email, gender, tel, enabled, b.ban_state, b.num
FROM member1 m
LEFT OUTER JOIN member_info i ON m.user_num = i.user_num
LEFT OUTER JOIN (
    SELECT user_num, num, ban_state
    FROM (
        SELECT user_num, num, ban_state,
               ROW_NUMBER() OVER (PARTITION BY user_num ORDER BY num DESC) AS rn
        FROM ban
        WHERE ban_state = 1
    ) t
    WHERE t.rn = 1
) b ON m.user_num = b.user_num
ORDER BY m.user_num
	</select>
	
		<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(distinct m.user_num), 0)
		FROM member1 m
		join member_info i on m.user_num = i.user_num
		<where>
			<if test="kwd != null and kwd != '' ">
				<include refid="where-list"/>
			</if>
		</where>
	</select>
	
		<sql id="where-list">
				INSTR(nickname, #{kwd}) &gt; 0	
		</sql>
		
	<select id="listReportMember" parameterType="map" resultType="com.fly.dds.admin.domain.ReportManage">
	    select num , reason , user_num , reporter_num , isreply , reportpage , article_num , reg_date , state
	     from declaration
	</select>
	
	<select id="reportCount" resultType="Integer">
		select nvl(count(*),0)
		from declaration
	</select>
	
	<select id="listBan" resultType="com.fly.dds.admin.domain.ReportManage">
		select num , reason , ban_sdate , ban_edate , ban_state , b.user_num , nickname
		from ban b 
		join member_info m on b.user_num = m.user_num
	</select>
	
	<select id="banCount" resultType="Integer">
		select nvl(count(*),0)
		from ban
	</select>
	
	<insert id="insertBan" parameterType="com.fly.dds.admin.domain.MemberManage">
		insert into ban ( num , reason , ban_sdate , ban_edate , ban_state , user_num )
		values ( ban_seq.nextval , #{reason} , sysdate , sysdate + #{ban_date} , 1 , #{user_num} )
	</insert>
	
	<update id="updateBan" parameterType="Long">
		update ban set ban_state = 0 where user_num = ${user_num}
	</update>
	
	<select id="checkBan" parameterType="Long" resultType="com.fly.dds.admin.domain.MemberManage">
		select rownum , ban_state , TO_CHAR(ban_edate, 'yyyy-mm-dd hh24:mi:ss') as ban_edate 
		from 
		( select rownum , ban_state , ban_edate , user_num from ban order by num desc) 
		where user_num = ${user_num} and rownum = 1
	</select>
	
	
	
</mapper>
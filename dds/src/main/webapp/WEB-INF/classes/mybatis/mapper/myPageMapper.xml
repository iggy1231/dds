<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fly.dds.mapper.MyPageMapper">

	<select id="findById" parameterType="Long" resultType="com.fly.dds.domain.Member">
		select m.user_num , userId , pwd , userName , nickName , to_char(birth , 'yyyy-mm-dd') birth , gender , email , 
		tel , content , photo , mbti
		from member1 m
		join member_info i on m.user_num = i.user_num
		join member_profile p on m.user_num = p.user_num
		where m.user_num = #{user_num}
	</select>

	<update id="updateMbti" parameterType="com.fly.dds.domain.Member">
		UPDATE member_profile SET mbti = #{mbti}
		WHERE user_num = #{user_num}
	</update>
	
	<update id="updateProfile" parameterType="com.fly.dds.domain.Member">
    UPDATE member_profile
    SET 
        content = #{content}, 
        photo = CASE 
                    WHEN #{photo, jdbcType=VARCHAR} IS NOT NULL THEN #{photo, jdbcType=VARCHAR} 
                    ELSE photo 
                END
    WHERE user_num = #{user_num}
</update>

	<update id="updateInfo" parameterType="com.fly.dds.domain.Member">
		UPDATE member_info SET nickname=#{nickName} , gender=#{gender} , tel=#{tel} , modify_date = sysdate
		WHERE user_num = #{user_num}
	</update>
	
	<update id="updateMember" parameterType="com.fly.dds.domain.Member">
		UPDATE member1 SET username = #{userName}
		WHERE user_num = #{user_num}
	</update>
	
	<update id="deleteMember" parameterType="Long">
		UPDATE member1 SET enabled = 0
		WHERE user_num = #{user_num}
	</update>
	
	<delete id="deleteInfo" parameterType="Long">
		DELETE member_info where user_num = #{user_num}
	</delete>
	
	<delete id="deleteProfile" parameterType="Long">
		DELETE member_profile where user_num = #{user_num}
	</delete>
	
	<select id="listReview" parameterType="map" resultType="com.fly.dds.domain.TravelReview">
	    SELECT t.NUM,SUBJECT,TO_CHAR(REG_DATE, 'YYYY-MM-dd') REG_DATE, HITCOUNT,LIKECOUNT,REPLYCOUNT, imageFileName
		FROM TRAVELREVIEW t
		left outer join ( select num , count(*) as likecount from travelReview_like group by num) l on t.num = l.num
		left outer join ( select num , count(*) as replycount from travelReview_reply group by num ) r on t.num = r.num
		left outer join TravelReview_File f ON t.num = f.num 
		where user_num = #{user_num}
		ORDER BY NUM DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<!-- 글개수 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(distinct t.num), 0)
		FROM travelReview t
		JOIN member1 m on t.user_num = m.user_num
		WHERE m.user_num = #{user_num}
	</select>
	
	<select id="listReply" parameterType="map" resultType="com.fly.dds.domain.MyPage">
		select user_num  , reply_num , num , content , to_char(reg_date , 'yyyy-mm-dd') reg_date , boardname
		from
		(select user_num ,reply_num , num , content , reg_date, 'travelreview' as boardname
		from travelreview_reply
		union all
		select user_num ,reply_num , num , content ,reg_date  , 'info' as boardname
		from info_reply
		union all
		select user_num ,reply_num , num , content ,reg_date , 'companion' as boardname
		from companion_reply
		order by reg_date desc)
		where user_num = #{user_num}
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="replyCount" parameterType="map" resultType="Integer">
	select count(reply_num)
	from (
    select user_num, reply_num
    from travelreview_reply
    union all
    select user_num, reply_num
    from info_reply
    union all
    select user_num, reply_num
    from companion_reply
	)
	where user_num = #{user_num}
	</select>
	
	<delete id="deleteReply">
	delete ${boardname}_reply where reply_num = #{reply_num}
	</delete>
	
	<select id="listWishReview" parameterType="map" resultType="com.fly.dds.domain.MyPage">
		SELECT tr.num, mp.photo, mi.nickname, tr.subject, tr.content, rr.region_sub, to_char(tr.reg_date, 'yyyy-mm-dd') AS reg_date, tf.imagefilename
	    FROM TravelReview tr
	    LEFT OUTER JOIN TravelReview_Region rr ON tr.num = rr.num
	    JOIN TravelReview_File tf ON tr.num = tf.num
	    JOIN MEMBER_INFO mi ON tr.user_num = mi.user_num
	    LEFT OUTER JOIN MEMBER_PROFILE mp ON tr.user_num = mp.user_num
	    WHERE tr.num IN (SELECT num FROM TravelReview_Like WHERE user_num = #{user_num})
	    ORDER BY tr.num DESC
	    OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="wishReviewCount" parameterType="long" resultType="Integer">
		SELECT NVL(COUNT(DISTINCT t.num), 0) AS likeCount
		FROM TravelReview_Like l
		JOIN TravelReview t ON l.num = t.num
		WHERE l.user_num = #{user_num}
	</select>
	
	<delete id="deleteWishlistReview" parameterType="java.util.Map">
    	DELETE FROM TravelReview_Like WHERE user_num = #{userNum} AND num = #{num}
	</delete>
	
	<delete id="deleteWishlistInfo" parameterType="java.util.Map">
    	DELETE FROM Info_Like WHERE user_num = #{userNum} AND num = #{num}
	</delete>
	
	<delete id="deleteWishlistCompanion" parameterType="java.util.Map">
    	DELETE FROM Companion_Like WHERE user_num = #{userNum} AND num = #{num}
	</delete>
	
	<delete id="deleteWishlistRoom" parameterType="java.util.Map">
    	DELETE FROM Room_wish_list WHERE user_num = #{userNum} AND num = #{num}
	</delete>
	
	<select id="listWishInfo" parameterType="map" resultType="com.fly.dds.domain.Info">
		select i.NUM, REGION_MAIN, REGION_SUB, CONTENTID,
		CONTENTTYPE, NAME, THUMBNAIL, MAIN_CATEGORY, MIDDLE_CATEGORY, SUB_CATEGORY
		from info i
		join info_like i2 on i.num=i2.num
		where user_num=#{user_num}
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="wishInfoCount" parameterType="long" resultType="Integer">
		SELECT NVL(COUNT(DISTINCT i.num), 0) AS likeCount
		from info i
		join info_like i2 on i.num=i2.num
		where user_num=#{user_num}
	</select>
	
	<select id="listWishCompanion" parameterType="map" resultType="com.fly.dds.domain.Companion">
		select distinct c.num, subject, nickname, to_char(sdate , 'yyyy-mm-dd') AS sdate, to_char(edate , 'yyyy-mm-dd') AS edate, gender, age, region_main AS mainRegion, total_people, current_people, photo
		from companion c
		join companion_info ci on c.num=ci.num
		join companion_age ca on c.num=ca.num
		join companion_region cr on c.num=cr.num
		join companion_like cl on c.num=cl.num
		join member_profile m on c.user_num = m.user_num
		where cl.user_num=#{user_num}
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="wishCompanionCount" parameterType="long" resultType="Integer">
		SELECT NVL(COUNT(DISTINCT c.num), 0) AS likeCount
		from Companion c
		join Companion_like cl on c.num=cl.num
		where c.user_num=#{user_num}
	</select>
	
	<select id="listWaitingCompanion" parameterType="map" resultType="com.fly.dds.domain.Companion">
		select distinct c.num, c.nickname, subject, reg_date, sdate, edate,
		total_people, gender, age, region_main AS mainRegion, photo
		from companion c
		join companion_info ci on c.num=ci.num
		join companion_age ca on c.num=ca.num
		join companion_region cr on c.num=cr.num
		join member_profile m on c.user_num=m.user_num
		join member_companioninfo m2 on m2.num=c.num
		where m2.status='대기' AND m2.user_num=#{user_num} AND c.status = 1
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="waitingCompanionCount" parameterType="long" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		from member_companioninfo
		where user_num=#{user_num} AND status='대기'
	</select>
	
	<select id="companionThumbnail" parameterType="long" resultType="String">
		select filename 
		from companion_file
		where num=#{num} group by num, file_num, filename
		order by file_num
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	<select id="listWishRoom" parameterType="map" resultType="com.fly.dds.domain.Room">
		select r.NUM, r.subject, sum(rating)/count(rating) rating, count(rating) ratingCount, min(rd.price) price, r.addr1, r.thumbnail
		from room r
		join room_wish_list rwl on r.num = rwl.num
		left outer join room_review rr on r.num = rr.num
		join room_detail rd on r.num = rd.num  
		where rwl.user_num = #{user_num}
		group by r.num , r.subject , rr.rating , r.addr1 , r.thumbnail
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<select id="wishRoomCount" parameterType="long" resultType="Integer">
		SELECT NVL(COUNT(DISTINCT r.num), 0) AS likeCount
		from room r
		join room_wish_list rl on r.num=rl.num
		where user_num=#{user_num}
	</select>
	
	<select id="listMyRoom" parameterType="map" resultType="com.fly.dds.domain.Room">
	    SELECT thumbnail, subject, rd.name, sdate, edate, (edate - sdate) AS days, rs.sale_num AS saleNum, rd.detail_num AS detailNum, rs.user_num AS userNum
	    FROM room r
	    JOIN room_detail rd ON r.num = rd.num
	    JOIN room_sale rs ON rd.detail_num = rs.detail_num
	    JOIN member1 m ON m.user_num = rs.user_num
	    WHERE rs.user_num = #{user_num}
	    GROUP BY thumbnail, subject, rd.name, sdate, edate, rs.sale_num, rd.detail_num, rs.user_num
	    ORDER BY sdate ASC
	</select>
	
	<delete id="deleteRoom" parameterType="map">
    	DELETE FROM room_sale WHERE sale_num = #{sale_num} and detail_num = #{detail_num} and user_num = #{user_num} 
	</delete>

	
	
</mapper>